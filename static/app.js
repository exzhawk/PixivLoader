// Generated by CoffeeScript 1.10.0
(function() {
  $(function() {
    var $big, $small, center, syncPosition;
    $big = $('#big');
    $small = $('#small');
    $big.owlCarousel({
      singleItem: true,
      slideSpeed: 1000,
      navigation: true,
      pagination: false,
      afterAction: syncPosition,
      responsiveRefreshRate: 500
    });
    $small.owlCarousel({
      items: 15,
      itemsDesktop: [1119, 10],
      itemsDesktopSmall: [979, 10],
      itemsTablet: [768, 8],
      itemsMobile: [479, 4],
      pagination: false,
      responsiveRefreshRate: 500,
      afterInit: function(el) {
        return el.find(".owl-item").eq(0).addClass("synced");
      }
    }).on("click", ".owl-item", function(e) {
      var number;
      e.preventDefault();
      number = $(this).data("owlItem");
      return $big.trigger("owl.goTo", number);
    });
    syncPosition = function(el) {
      var current;
      current = this.currentItem;
      $small.find(".owl-item").removeClass("synced").eq(current).addClass("synced");
      if ($small.data("owlCarousel") !== void 0) {
        return center(current);
      }
    };
    return center = function(number) {
      var found, i, num, sync2visible;
      sync2visible = $small.data("owlCarousel").owl.visibleItems;
      num = number;
      found = false;
      for (i in sync2visible) {
        if (num === sync2visible[i]) {
          found = true;
        }
      }
      if (found === false) {
        if (num > sync2visible[sync2visible.length - 1]) {
          return $small.trigger("owl.goTo", num - sync2visible.length + 2);
        } else {
          if (num - 1 === -1) {
            num = 0;
          }
          return $small.trigger("owl.goTo", num);
        }
      } else if (num === sync2visible[sync2visible.length - 1]) {
        return $small.trigger("owl.goTo", sync2visible[1]);
      } else if (num === sync2visible[0]) {
        return $small.trigger("owl.goTo", num - 1);
      }
    };
  });

}).call(this);

//# sourceMappingURL=app.js.map
